
general {
    lock_cmd = pidof swaylock || swaylock # runs hyprlock if it is not already running (this is always run when "loginctl lock-session" is called)
    # unlock_cmd = killall hyprlock # kills hyprlock when unlocking (this is always run when "loginctl unlock-session" is called)
    before_sleep_cmd = bash LockScreen.sh # ensures that the session is locked before going to sleep
    after_sleep_cmd = hyprctl dispatch dpms on # turn of screen after sleep (not strictly necessary, but just in case)
    # ignore_dbus_inhibit = false             # whether to ignore dbus-sent idle-inhibit requests (used by e.g. firefox or steam)
}

# turn off screen faster if session is already locked
# (disabled by default)
listener {
    timeout = 30
    on-timeout = bash dpms.sh  # turns off the screen if hyprlock is active
    on-resume = hyprctl dispatch dpms on # command to run when activity is detected after timeout has fired.
}

# Screenlock
listener {
    timeout = 600 #
    # on-timeout = loginctl lock-session # command to run when timeout has passed
    on-timeout = bash LockScreen.sh # command to run when timeout has passed
    # on-resume = notify-send "Welcome back to your desktop!"  # command to run when activity is detected after timeout has fired.
}


listener {
    timeout = 1200 
    on-timeout = bash suspend.sh 
}
